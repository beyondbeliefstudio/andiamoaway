---
import type { HTMLAttributes } from "astro/types";

export interface LinkProps extends HTMLAttributes<"a"> {
  href: string;
  variant?: "primary" | "secondary" | "outline" | "nav-link";
}

const { 
  href,
    variant = "primary",
    ...rest 
} = Astro.props;

---

<a href={href} class:list={["btn", variant]} {...rest}>
  <slot />
</a>


<style lang="scss">
.btn {
  position: relative;
  display: inline-block;
  border-style: solid;
  border-width: 1px;
  transition: .25s ease-in-out all;
  font-weight: 700;
  letter-spacing: 2px;
  text-decoration: none;
  font-size: .9rem;
  padding: .75rem 1.5rem;
  border-radius: 100px;
  text-transform: uppercase;
  line-height: 1.4;
  margin: .5rem .25rem;
  text-align: center;
  cursor: pointer;
}

.primary {
  border-color: var(--brand-primary);
  background-color: var(--brand-primary);
  color: var(--dark-800);

  &:hover, &:active, &:focus {
    background-color: var(--brand-secondary);
    border-color: var(--brand-secondary);
    color: var(--light-200);
  }
}

.secondary {
  border-color: var(--brand-secondary);
  background-color: var(--brand-secondary);
  color: var(--light-100);

  &:hover, &:active, &:focus {
    background-color: var(--dark-800);
    border-color: var(--dark-800);
    color: var(--light-200);
  }
}

.outline {
  border-color: var(--brand-secondary);
  color: var(--brand-secondary);
  background-color: transparent;

  &:hover, &:active, &:focus {
    background-color: var(--brand-secondary);
    border-color: var(--brand-secondary);
    color: var(--light-200);
  }
}

.nav-link {
  border: 0px;
  font-size: 1rem;
  line-height: 1.8;
  border-radius: 0;
  padding: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: color .3s;
  color: var(--brand-secondary);
  margin: 0;
  
  &:hover {
    color: var(--dark-900);
  }
}
</style>